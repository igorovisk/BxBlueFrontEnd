{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useTimeout(callback, delay) {\n  const savedCallback = useRef(callback);\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (!delay && delay !== 0) {\n      return;\n    }\n\n    const id = setTimeout(() => savedCallback.current(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AAGA,SAASC,yBAAT,QAA0C,8BAA1C;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA0CC,KAA1C,EAA8D;EAC5D,MAAMC,aAAa,GAAGL,MAAM,CAACG,QAAD,CAA5B;EAGAF,yBAAyB,CAAC,MAAK;IAC7BI,aAAa,CAACC,OAAd,GAAwBH,QAAxB;EACD,CAFwB,EAEtB,CAACA,QAAD,CAFsB,CAAzB;EAKAJ,SAAS,CAAC,MAAK;IAGb,IAAI,CAACK,KAAD,IAAUA,KAAK,KAAK,CAAxB,EAA2B;MACzB;IACD;;IAED,MAAMG,EAAE,GAAGC,UAAU,CAAC,MAAMH,aAAa,CAACC,OAAd,EAAP,EAAgCF,KAAhC,CAArB;IAEA,OAAO,MAAMK,YAAY,CAACF,EAAD,CAAzB;EACD,CAVQ,EAUN,CAACH,KAAD,CAVM,CAAT;AAWD;;AAED,eAAeF,UAAf","names":["useEffect","useRef","useIsomorphicLayoutEffect","useTimeout","callback","delay","savedCallback","current","id","setTimeout","clearTimeout"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/node_modules/usehooks-ts/src/useTimeout/useTimeout.ts"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nfunction useTimeout(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useIsomorphicLayoutEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the timeout.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    // Note: 0 is a valid value for delay.\n    if (!delay && delay !== 0) {\n      return\n    }\n\n    const id = setTimeout(() => savedCallback.current(), delay)\n\n    return () => clearTimeout(id)\n  }, [delay])\n}\n\nexport default useTimeout\n"]},"metadata":{},"sourceType":"module"}