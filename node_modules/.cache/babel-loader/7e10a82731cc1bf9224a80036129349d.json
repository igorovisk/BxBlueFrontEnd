{"ast":null,"code":"import { useState } from 'react';\n\nfunction useCopyToClipboard() {\n  const [copiedText, setCopiedText] = useState(null);\n\n  const copy = async text => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported');\n      return false;\n    }\n\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopiedText(text);\n      return true;\n    } catch (error) {\n      console.warn('Copy failed', error);\n      setCopiedText(null);\n      return false;\n    }\n  };\n\n  return [copiedText, copy];\n}\n\nexport default useCopyToClipboard;","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAKA,SAASC,kBAAT,GAA2B;EACzB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAc,IAAd,CAA5C;;EAEA,MAAMI,IAAI,GAAW,MAAMC,IAAN,IAAa;IAChC,IAAI,CAACC,SAAS,EAAEC,SAAhB,EAA2B;MACzBC,OAAO,CAACC,IAAR,CAAa,yBAAb;MACA,OAAO,KAAP;IACD;;IAGD,IAAI;MACF,MAAMH,SAAS,CAACC,SAAV,CAAoBG,SAApB,CAA8BL,IAA9B,CAAN;MACAF,aAAa,CAACE,IAAD,CAAb;MACA,OAAO,IAAP;IACD,CAJD,CAIE,OAAOM,KAAP,EAAc;MACdH,OAAO,CAACC,IAAR,CAAa,aAAb,EAA4BE,KAA5B;MACAR,aAAa,CAAC,IAAD,CAAb;MACA,OAAO,KAAP;IACD;EACF,CAhBD;;EAkBA,OAAO,CAACD,UAAD,EAAaE,IAAb,CAAP;AACD;;AAED,eAAeH,kBAAf","names":["useState","useCopyToClipboard","copiedText","setCopiedText","copy","text","navigator","clipboard","console","warn","writeText","error"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/node_modules/usehooks-ts/src/useCopyToClipboard/useCopyToClipboard.ts"],"sourcesContent":["import { useState } from 'react'\n\ntype CopiedValue = string | null\ntype CopyFn = (text: string) => Promise<boolean> // Return success\n\nfunction useCopyToClipboard(): [CopiedValue, CopyFn] {\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null)\n\n  const copy: CopyFn = async text => {\n    if (!navigator?.clipboard) {\n      console.warn('Clipboard not supported')\n      return false\n    }\n\n    // Try to save to clipboard then save it in the state if worked\n    try {\n      await navigator.clipboard.writeText(text)\n      setCopiedText(text)\n      return true\n    } catch (error) {\n      console.warn('Copy failed', error)\n      setCopiedText(null)\n      return false\n    }\n  }\n\n  return [copiedText, copy]\n}\n\nexport default useCopyToClipboard\n"]},"metadata":{},"sourceType":"module"}