{"ast":null,"code":"var _jsxFileName = \"/Users/igor_acb/BxBlue_Igor/front_end/src/components/wallet/WalletCardList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Button from \"../button/singleButton\";\nimport styles from \"../card/CardList.module.scss\";\nimport { storageToken } from \"../../contexts/authContext\";\nimport WalletCard from \"./WalletCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WalletCardList(_ref) {\n  _s();\n\n  var _transactions$filter;\n\n  let {\n    money,\n    setMoney\n  } = _ref;\n  const [transactions, setTransactions] = useState();\n  const [isSold, setIsSold] = useState(false);\n  const token = storageToken();\n  useEffect(() => {\n    (async function () {\n      await axios.get(\"http://localhost:3000/transactions\", {\n        headers: {\n          [\"x-access-token\"]: token\n        }\n      }).then(res => {\n        setTransactions(res.data);\n      });\n    })();\n  }, []);\n\n  async function handleSellSubmit(transactionId) {\n    const transactionResponse = await axios.post(\"http://localhost:3000/transactions/pokemon/sell\", {\n      transactionId\n    }, {\n      headers: {\n        [\"x-access-token\"]: token\n      }\n    });\n    const diff = money + transactionResponse.data.acquisitionUSDValue;\n    setMoney(money + diff);\n  }\n\n  console.log(isSold);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.cardList,\n      children: !isSold && (transactions === null || transactions === void 0 ? void 0 : (_transactions$filter = transactions.filter(transaction => !(transaction !== null && transaction !== void 0 && transaction.sellDate))) === null || _transactions$filter === void 0 ? void 0 : _transactions$filter.map(buyTransaction => {\n        return /*#__PURE__*/_jsxDEV(WalletCard, {\n          setIsSold: setIsSold,\n          handleSellSubmit: handleSellSubmit,\n          pokemonId: buyTransaction === null || buyTransaction === void 0 ? void 0 : buyTransaction.pokemonId,\n          pokemonName: buyTransaction === null || buyTransaction === void 0 ? void 0 : buyTransaction.pokemonName,\n          baseExperience: buyTransaction === null || buyTransaction === void 0 ? void 0 : buyTransaction.baseExperience,\n          acquisitionUSDValue: buyTransaction === null || buyTransaction === void 0 ? void 0 : buyTransaction.acquisitionUSDValue,\n          transactionId: buyTransaction._id,\n          acquisitionDate: buyTransaction === null || buyTransaction === void 0 ? void 0 : buyTransaction.acquisitionDate,\n          btcCurrencyAtAcquisition: buyTransaction === null || buyTransaction === void 0 ? void 0 : buyTransaction.btcCurrencyAtAcquisition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navigationPagesContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        children: \"P\\xE1gina Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        children: \"Pr\\xF3xima P\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\n\n_s(WalletCardList, \"W2D36h4ykHIL38VKSo+wvecF/Lg=\");\n\n_c = WalletCardList;\nexport default WalletCardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletCardList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Button","styles","storageToken","WalletCard","WalletCardList","money","setMoney","transactions","setTransactions","isSold","setIsSold","token","get","headers","then","res","data","handleSellSubmit","transactionId","transactionResponse","post","diff","acquisitionUSDValue","console","log","container","cardList","filter","transaction","sellDate","map","buyTransaction","pokemonId","pokemonName","baseExperience","_id","acquisitionDate","btcCurrencyAtAcquisition","navigationPagesContainer"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/src/components/wallet/WalletCardList.tsx"],"sourcesContent":["import React, {\n   Dispatch,\n   SetStateAction,\n   useContext,\n   useEffect,\n   useState,\n} from \"react\";\nimport axios from \"axios\";\nimport Button from \"../button/singleButton\";\nimport styles from \"../card/CardList.module.scss\";\nimport { storageToken } from \"../../contexts/authContext\";\nimport WalletCard from \"./WalletCard\";\nimport { isMethodSignature } from \"typescript\";\n\ninterface WalletCardList {\n   money?: number;\n   setMoney: Dispatch<SetStateAction<number>>;\n}\n\nfunction WalletCardList({ money, setMoney }: WalletCardList) {\n   const [transactions, setTransactions] = useState<\n      [\n         {\n            baseExperience?: number;\n            acquisitionUSDValue?: number;\n            btcCurrencyAtAcquisition?: number;\n            pokemonId?: number;\n            pokemonName?: string;\n            sellDate?: Date;\n            acquisitionDate?: Date;\n            _id: string;\n         }\n      ]\n   >();\n   const [isSold, setIsSold] = useState<boolean>(false);\n   const token = storageToken();\n\n   useEffect(() => {\n      (async function () {\n         await axios\n            .get(\"http://localhost:3000/transactions\", {\n               headers: {\n                  [\"x-access-token\"]: token,\n               },\n            })\n            .then((res) => {\n               setTransactions(res.data);\n            });\n      })();\n   }, []);\n\n   async function handleSellSubmit(transactionId: string) {\n      const transactionResponse = await axios.post(\n         \"http://localhost:3000/transactions/pokemon/sell\",\n         { transactionId },\n         {\n            headers: {\n               [\"x-access-token\"]: token,\n            },\n         }\n      );\n\n      const diff = money + transactionResponse.data.acquisitionUSDValue;\n      setMoney(money + diff);\n   }\n   console.log(isSold);\n   return (\n      <div className={styles.container}>\n         <ul className={styles.cardList}>\n            {!isSold &&\n               transactions\n                  ?.filter((transaction) => !transaction?.sellDate)\n                  ?.map((buyTransaction) => {\n                     return (\n                        <WalletCard\n                           setIsSold={setIsSold}\n                           handleSellSubmit={handleSellSubmit}\n                           pokemonId={buyTransaction?.pokemonId}\n                           pokemonName={buyTransaction?.pokemonName}\n                           baseExperience={buyTransaction?.baseExperience}\n                           acquisitionUSDValue={\n                              buyTransaction?.acquisitionUSDValue\n                           }\n                           transactionId={buyTransaction._id}\n                           acquisitionDate={buyTransaction?.acquisitionDate}\n                           btcCurrencyAtAcquisition={\n                              buyTransaction?.btcCurrencyAtAcquisition\n                           }\n                        />\n                     );\n                  })}\n         </ul>\n         <div className={styles.navigationPagesContainer}>\n            <Button type=\"button\">Página Anterior</Button>\n            <Button type=\"button\">Próxima Página</Button>\n         </div>\n      </div>\n   );\n}\n\nexport default WalletCardList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}