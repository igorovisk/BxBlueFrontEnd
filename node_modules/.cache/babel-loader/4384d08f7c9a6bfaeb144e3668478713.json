{"ast":null,"code":"var _jsxFileName = \"/Users/igor_acb/BxBlue_Igor/front_end/src/contexts/authContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction checkIfLoggedIn() {\n  const loginToken = localStorage.getItem(\"tokenObj\") || \"\";\n\n  if (loginToken) {\n    const parsedToken = JSON.parse(loginToken) || {};\n\n    if (new Date(parsedToken.expirationDate) >= new Date()) {\n      return true;\n    } else {\n      return false;\n    }\n  } else return false;\n}\n\nexport const AuthContext = /*#__PURE__*/createContext({\n  handleLogin: (email, password) => {},\n  handleLogout: () => {},\n  isLogged: false\n}); //AUTHCONTEXT PROVIDER COMPONENT THAT WILL WRAP THE ENTIRE APP.\n\nexport const AuthProvider = props => {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(checkIfLoggedIn());\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState(); // LOGIN FUNCTION TO BE PASSED TO COMPONENTS BY CONTEXT\n\n  async function handleLogin(email, password) {\n    try {\n      await axios.post(\"http://localhost:3000/login\", {\n        email: email,\n        password: password\n      }).then(res => {\n        setIsLogged(true);\n        const tokenObj = {\n          token: res.data.token,\n          userId: res.data._id,\n          name: res.data.name,\n          auth: res.data.auth,\n          expirationDate: res.data.expirationDate\n        };\n        setToken(res.data.token);\n        console.log(token);\n        localStorage.setItem(\"tokenObj\", JSON.stringify(tokenObj)); // window.location.href = \"/home\";\n      });\n      await axios.get(\"http://localhost:3000/users\", {\n        headers: {\n          \"x-access-token\": token\n        }\n      }).then(res => {\n        setUser(res.data);\n        console.log(res.data, \"USER DATA\");\n      });\n    } catch (err) {\n      console.log(err.message, \"error\");\n    }\n  } // LOGOUT FUNCTION\n\n\n  function handleLogout() {\n    localStorage.setItem(\"tokenObj\", \"\");\n  } //CONTEXT VALUE TO BE PASSED TO PROVIDER AND BE ACESSED BY OTHER COMPONENTS (value attribute is like a custom prop in a custom component)\n\n\n  const authContextValue = {\n    handleLogin,\n    isLogged,\n    handleLogout\n  };\n  useEffect(() => {\n    (async function getInfo() {})();\n  }, [token]); //RETURNS PROVIDER WITH VALUE PROP\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n}; //CUSTOM HOOK TO MAKE IMPORT EASIER. USAGE EXAMPLE: const authcontext = useAuth()\n\n_s(AuthProvider, \"PBMtimCijUZV1PW+v6ylF39Jp3E=\");\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["axios","createContext","useContext","useEffect","useState","checkIfLoggedIn","loginToken","localStorage","getItem","parsedToken","JSON","parse","Date","expirationDate","AuthContext","handleLogin","email","password","handleLogout","isLogged","AuthProvider","props","setIsLogged","token","setToken","user","setUser","post","then","res","tokenObj","data","userId","_id","name","auth","console","log","setItem","stringify","get","headers","err","message","authContextValue","getInfo","children","useAuth"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/src/contexts/authContext.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\nfunction checkIfLoggedIn() {\n   const loginToken = localStorage.getItem(\"tokenObj\") || \"\";\n   if (loginToken) {\n      const parsedToken = JSON.parse(loginToken) || {};\n\n      if (new Date(parsedToken.expirationDate) >= new Date()) {\n         return true;\n      } else {\n         return false;\n      }\n   } else return false;\n}\nexport const AuthContext = createContext({\n   handleLogin: (email: string, password: string) => {},\n   handleLogout: () => {},\n   isLogged: false,\n});\n\n//AUTHCONTEXT PROVIDER COMPONENT THAT WILL WRAP THE ENTIRE APP.\nexport const AuthProvider = (props: any) => {\n   const [isLogged, setIsLogged] = useState<boolean>(checkIfLoggedIn());\n   const [token, setToken] = useState<string>(\"\");\n   const [user, setUser] = useState<{\n      name: string;\n      userId: string;\n      wallet: {};\n   }>();\n   // LOGIN FUNCTION TO BE PASSED TO COMPONENTS BY CONTEXT\n   async function handleLogin(email: string, password: string) {\n      try {\n         await axios\n            .post(\"http://localhost:3000/login\", {\n               email: email,\n               password: password,\n            })\n            .then((res: any) => {\n               setIsLogged(true);\n\n               const tokenObj = {\n                  token: res.data.token,\n                  userId: res.data._id,\n                  name: res.data.name,\n                  auth: res.data.auth,\n                  expirationDate: res.data.expirationDate,\n               };\n               setToken(res.data.token);\n               console.log(token);\n               localStorage.setItem(\"tokenObj\", JSON.stringify(tokenObj));\n\n               // window.location.href = \"/home\";\n            });\n         await axios\n            .get(\"http://localhost:3000/users\", {\n               headers: { \"x-access-token\": token },\n            })\n            .then((res) => {\n               setUser(res.data);\n               console.log(res.data, \"USER DATA\");\n            });\n      } catch (err: any) {\n         console.log(err.message, \"error\");\n      }\n   }\n\n   // LOGOUT FUNCTION\n   function handleLogout() {\n      localStorage.setItem(\"tokenObj\", \"\");\n   }\n\n   //CONTEXT VALUE TO BE PASSED TO PROVIDER AND BE ACESSED BY OTHER COMPONENTS (value attribute is like a custom prop in a custom component)\n   const authContextValue = {\n      handleLogin,\n      isLogged,\n      handleLogout,\n   };\n\n   useEffect(() => {\n      (async function getInfo() {})();\n   }, [token]);\n   //RETURNS PROVIDER WITH VALUE PROP\n   return (\n      <AuthContext.Provider value={authContextValue}>\n         {props.children}\n      </AuthContext.Provider>\n   );\n};\n\n//CUSTOM HOOK TO MAKE IMPORT EASIER. USAGE EXAMPLE: const authcontext = useAuth()\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}