{"ast":null,"code":"import { useCallback, useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useElementSize() {\n  const [ref, setRef] = useState(null);\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const handleSize = useCallback(() => {\n    setSize({\n      width: ref?.offsetWidth || 0,\n      height: ref?.offsetHeight || 0\n    });\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\n  useEventListener('resize', handleSize);\n  useIsomorphicLayoutEffect(() => {\n    handleSize();\n  }, [ref?.offsetHeight, ref?.offsetWidth]);\n  return [setRef, size];\n}\n\nexport default useElementSize;","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,SAASC,yBAAT,QAA0C,8BAA1C;;AAOA,SAASC,cAAT,GAAuB;EAOrB,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAW,IAAX,CAA9B;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAO;IACrCQ,KAAK,EAAE,CAD8B;IAErCC,MAAM,EAAE;EAF6B,CAAP,CAAhC;EAMA,MAAMC,UAAU,GAAGX,WAAW,CAAC,MAAK;IAClCQ,OAAO,CAAC;MACNC,KAAK,EAAEJ,GAAG,EAAEO,WAAL,IAAoB,CADrB;MAENF,MAAM,EAAEL,GAAG,EAAEQ,YAAL,IAAqB;IAFvB,CAAD,CAAP;EAMD,CAP6B,EAO3B,CAACR,GAAG,EAAEQ,YAAN,EAAoBR,GAAG,EAAEO,WAAzB,CAP2B,CAA9B;EASAV,gBAAgB,CAAC,QAAD,EAAWS,UAAX,CAAhB;EAEAR,yBAAyB,CAAC,MAAK;IAC7BQ,UAAU;EAEX,CAHwB,EAGtB,CAACN,GAAG,EAAEQ,YAAN,EAAoBR,GAAG,EAAEO,WAAzB,CAHsB,CAAzB;EAKA,OAAO,CAACN,MAAD,EAASC,IAAT,CAAP;AACD;;AAED,eAAeH,cAAf","names":["useCallback","useState","useEventListener","useIsomorphicLayoutEffect","useElementSize","ref","setRef","size","setSize","width","height","handleSize","offsetWidth","offsetHeight"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/node_modules/usehooks-ts/src/useElementSize/useElementSize.ts"],"sourcesContent":["import { useCallback, useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ninterface Size {\n  width: number\n  height: number\n}\n\nfunction useElementSize<T extends HTMLElement = HTMLDivElement>(): [\n  (node: T | null) => void,\n  Size,\n] {\n  // Mutable values like 'ref.current' aren't valid dependencies\n  // because mutating them doesn't re-render the component.\n  // Instead, we use a state as a ref to be reactive.\n  const [ref, setRef] = useState<T | null>(null)\n  const [size, setSize] = useState<Size>({\n    width: 0,\n    height: 0,\n  })\n\n  // Prevent too many rendering using useCallback\n  const handleSize = useCallback(() => {\n    setSize({\n      width: ref?.offsetWidth || 0,\n      height: ref?.offsetHeight || 0,\n    })\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref?.offsetHeight, ref?.offsetWidth])\n\n  useEventListener('resize', handleSize)\n\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref?.offsetHeight, ref?.offsetWidth])\n\n  return [setRef, size]\n}\n\nexport default useElementSize\n"]},"metadata":{},"sourceType":"module"}