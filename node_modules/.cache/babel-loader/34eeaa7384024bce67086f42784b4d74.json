{"ast":null,"code":"var _jsxFileName = \"/Users/igor_acb/BxBlue_Igor/front_end/src/components/summary/SummaryItem.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { storageToken } from \"src/contexts/authContext\";\nimport styles from \"./Summary.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SummaryItem(_ref) {\n  _s();\n\n  let {\n    pokemonId,\n    pokemonName,\n    tradeValueAtOperationDate,\n    transactionId,\n    acquisitionUSDValue,\n    acquisitionDate,\n    baseExperience\n  } = _ref;\n  const [pokemonInfo, setPokemonInfo] = useState();\n\n  async function handleSellTransaction() {\n    const token = storageToken();\n    const payload = {\n      transactionId\n    };\n    await axios.post(\"http://localhost:3000/transactions/pokemon/sell\", payload, {\n      headers: {\n        [\"x-access-token\"]: token\n      }\n    }).then(res => {\n      console.log(res, \"RES\");\n    });\n  }\n\n  useEffect(() => {\n    (async function getPokemonInfo() {\n      try {\n        if (baseExperience !== undefined) {\n          await axios.post(`http://localhost:3000/pokemons/`, {\n            id: pokemonId,\n            baseExperience: baseExperience\n          }).then(res => {\n            console.log(res);\n            setPokemonInfo(res === null || res === void 0 ? void 0 : res.data);\n          });\n        }\n      } catch (err) {\n        console.log(err, \"ERR\");\n      }\n    })();\n  }, []);\n  const acquisitionDateString = new Date(acquisitionDate || \"\").toLocaleDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.summaryContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 11\n  }, this);\n}\n\n_s(SummaryItem, \"m9jXF2Z2wgVo3cqr+OPLcJjVJiY=\");\n\n_c = SummaryItem;\nexport default SummaryItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummaryItem\");","map":{"version":3,"names":["axios","useEffect","useState","storageToken","styles","SummaryItem","pokemonId","pokemonName","tradeValueAtOperationDate","transactionId","acquisitionUSDValue","acquisitionDate","baseExperience","pokemonInfo","setPokemonInfo","handleSellTransaction","token","payload","post","headers","then","res","console","log","getPokemonInfo","undefined","id","data","err","acquisitionDateString","Date","toLocaleDateString","summaryContainer"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/src/components/summary/SummaryItem.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { storageToken } from \"src/contexts/authContext\";\nimport styles from \"./Summary.module.scss\";\n\ninterface CardProps {\n   pokemonId?: number;\n   pokemonName?: string;\n   pokemonImage?: string;\n   baseExperience?: number;\n   btcCurrencyAtAcquisition?: number;\n   tradeValueAtOperationDate?: number;\n   transactionId?: string;\n   acquisitionUSDValue?: number;\n   acquisitionDate?: Date;\n}\n\nfunction SummaryItem({\n   pokemonId,\n   pokemonName,\n   tradeValueAtOperationDate,\n   transactionId,\n   acquisitionUSDValue,\n   acquisitionDate,\n   baseExperience,\n}: CardProps) {\n   const [pokemonInfo, setPokemonInfo] = useState<{\n      pokemonImage: string;\n      pokemonCurrentValue: number;\n   }>();\n\n   async function handleSellTransaction() {\n      const token = storageToken();\n      const payload = {\n         transactionId,\n      };\n\n      await axios\n         .post(\"http://localhost:3000/transactions/pokemon/sell\", payload, {\n            headers: {\n               [\"x-access-token\"]: token,\n            },\n         })\n         .then((res) => {\n            console.log(res, \"RES\");\n         });\n   }\n\n   useEffect(() => {\n      (async function getPokemonInfo() {\n         try {\n            if (baseExperience !== undefined) {\n               await axios\n                  .post(`http://localhost:3000/pokemons/`, {\n                     id: pokemonId,\n                     baseExperience: baseExperience,\n                  })\n                  .then((res) => {\n                     console.log(res);\n                     setPokemonInfo(res?.data);\n                  });\n            }\n         } catch (err) {\n            console.log(err, \"ERR\");\n         }\n      })();\n   }, []);\n\n   const acquisitionDateString = new Date(\n      acquisitionDate || \"\"\n   ).toLocaleDateString();\n   return <div className={styles.summaryContainer}></div>;\n}\n\nexport default SummaryItem;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAcA,SAASC,WAAT,OAQc;EAAA;;EAAA,IARO;IAClBC,SADkB;IAElBC,WAFkB;IAGlBC,yBAHkB;IAIlBC,aAJkB;IAKlBC,mBALkB;IAMlBC,eANkB;IAOlBC;EAPkB,CAQP;EACX,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;;EAKA,eAAea,qBAAf,GAAuC;IACpC,MAAMC,KAAK,GAAGb,YAAY,EAA1B;IACA,MAAMc,OAAO,GAAG;MACbR;IADa,CAAhB;IAIA,MAAMT,KAAK,CACPkB,IADE,CACG,iDADH,EACsDD,OADtD,EAC+D;MAC/DE,OAAO,EAAE;QACN,CAAC,gBAAD,GAAoBH;MADd;IADsD,CAD/D,EAMFI,IANE,CAMIC,GAAD,IAAS;MACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,KAAjB;IACF,CARE,CAAN;EASF;;EAEDpB,SAAS,CAAC,MAAM;IACb,CAAC,eAAeuB,cAAf,GAAgC;MAC9B,IAAI;QACD,IAAIZ,cAAc,KAAKa,SAAvB,EAAkC;UAC/B,MAAMzB,KAAK,CACPkB,IADE,CACI,iCADJ,EACsC;YACtCQ,EAAE,EAAEpB,SADkC;YAEtCM,cAAc,EAAEA;UAFsB,CADtC,EAKFQ,IALE,CAKIC,GAAD,IAAS;YACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ;YACAP,cAAc,CAACO,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEM,IAAN,CAAd;UACF,CARE,CAAN;QASF;MACH,CAZD,CAYE,OAAOC,GAAP,EAAY;QACXN,OAAO,CAACC,GAAR,CAAYK,GAAZ,EAAiB,KAAjB;MACF;IACH,CAhBD;EAiBF,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,MAAMC,qBAAqB,GAAG,IAAIC,IAAJ,CAC3BnB,eAAe,IAAI,EADQ,EAE5BoB,kBAF4B,EAA9B;EAGA,oBAAO;IAAK,SAAS,EAAE3B,MAAM,CAAC4B;EAAvB;IAAA;IAAA;IAAA;EAAA,QAAP;AACF;;GAvDQ3B,W;;KAAAA,W;AAyDT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}