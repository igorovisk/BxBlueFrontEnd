{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n\nfunction useLockedBody() {\n  let initialLocked = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const [locked, setLocked] = useState(initialLocked);\n  useIsomorphicLayoutEffect(() => {\n    if (!locked) {\n      return;\n    }\n\n    const originalOverflow = document.body.style.overflow;\n    const originalPaddingRight = document.body.style.paddingRight;\n    document.body.style.overflow = 'hidden';\n    const root = document.getElementById('___gatsby');\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow;\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight;\n      }\n    };\n  }, [locked]);\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked);\n    }\n  }, [initialLocked]);\n  return [locked, setLocked];\n}\n\nexport default useLockedBody;","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,SAASC,yBAAT,QAA0C,8BAA1C;;AAIA,SAASC,aAAT,GAA4C;EAAA,IAArBC,aAAqB,uEAAL,KAAK;EAC1C,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAACG,aAAD,CAApC;EAGAF,yBAAyB,CAAC,MAAK;IAC7B,IAAI,CAACG,MAAL,EAAa;MACX;IACD;;IAGD,MAAME,gBAAgB,GAAGC,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAA7C;IACA,MAAMC,oBAAoB,GAAGJ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBG,YAAjD;IAGAL,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;IAGA,MAAMG,IAAI,GAAGN,QAAQ,CAACO,cAAT,CAAwB,WAAxB,CAAb;IACA,MAAMC,cAAc,GAAGF,IAAI,GAAGA,IAAI,CAACG,WAAL,GAAmBH,IAAI,CAACI,WAA3B,GAAyC,CAApE;;IAGA,IAAIF,cAAJ,EAAoB;MAClBR,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBG,YAApB,GAAmC,GAAGG,cAAc,IAApD;IACD;;IAED,OAAO,MAAK;MACVR,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+BJ,gBAA/B;;MAEA,IAAIS,cAAJ,EAAoB;QAClBR,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBG,YAApB,GAAmCD,oBAAnC;MACD;IACF,CAND;EAOD,CA5BwB,EA4BtB,CAACP,MAAD,CA5BsB,CAAzB;EA+BAL,SAAS,CAAC,MAAK;IACb,IAAIK,MAAM,KAAKD,aAAf,EAA8B;MAC5BE,SAAS,CAACF,aAAD,CAAT;IACD;EAEF,CALQ,EAKN,CAACA,aAAD,CALM,CAAT;EAOA,OAAO,CAACC,MAAD,EAASC,SAAT,CAAP;AACD;;AAED,eAAeH,aAAf","names":["useEffect","useState","useIsomorphicLayoutEffect","useLockedBody","initialLocked","locked","setLocked","originalOverflow","document","body","style","overflow","originalPaddingRight","paddingRight","root","getElementById","scrollBarWidth","offsetWidth","scrollWidth"],"sources":["/Users/igor_acb/BxBlue_Igor/front_end/node_modules/usehooks-ts/src/useLockedBody/useLockedBody.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ntype ReturnType = [boolean, (locked: boolean) => void]\n\nfunction useLockedBody(initialLocked = false): ReturnType {\n  const [locked, setLocked] = useState(initialLocked)\n\n  // Do the side effect before render\n  useIsomorphicLayoutEffect(() => {\n    if (!locked) {\n      return\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow\n    const originalPaddingRight = document.body.style.paddingRight\n\n    // Lock body scroll\n    document.body.style.overflow = 'hidden'\n\n    // Get the scrollBar width\n    const root = document.getElementById('___gatsby') // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight\n      }\n    }\n  }, [locked])\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked])\n\n  return [locked, setLocked]\n}\n\nexport default useLockedBody\n"]},"metadata":{},"sourceType":"module"}